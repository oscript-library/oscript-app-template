///////////////////////////////////////////////////////////////////////////////
//
// Служебный модуль с набором методов работы с командами приложения
//
// В большинстве проектов изменять данный модуль не требуется
//
///////////////////////////////////////////////////////////////////////////////

Перем мИсполнителиКоманд;
Перем мРегистраторКоманд;

///////////////////////////////////////////////////////////////////////////////

Процедура ЗарегистрироватьКоманды(Знач Парсер) Экспорт
	
	КомандыИРеализация = Новый Соответствие;
	мРегистраторКоманд.ПриРегистрацииКомандПриложения(КомандыИРеализация);
	
	Для Каждого КлючИЗначение Из КомандыИРеализация Цикл

		ДобавитьКоманду(КлючИЗначение.Ключ, КлючИЗначение.Значение, Парсер);

	КонецЦикла;
	
КонецПроцедуры // ЗарегистрироватьКоманды()

Процедура РегистраторКоманд(Знач ОбъектРегистратор) Экспорт

	мИсполнителиКоманд = Новый Соответствие;	
	мРегистраторКоманд = ОбъектРегистратор;

КонецПроцедуры // РегистраторКоманд()

Функция ПолучитьКоманду(Знач ИмяКоманды) Экспорт
	
	КлассРеализации = мИсполнителиКоманд[ИмяКоманды];
	Если КлассРеализации = Неопределено Тогда
	
		ВызватьИсключение "Неверная операция. Команда '"+ИмяКоманды+"' не предусмотрена";

	КонецЕсли;
	
	Возврат КлассРеализации;
	
КонецФункции // ПолучитьКоманду()

Функция ВыполнитьКоманду(Знач ИмяКоманды, Знач ПараметрыКоманды) Экспорт
	
	Команда = ПолучитьКоманду(ИмяКоманды);
	Возврат Команда.ВыполнитьКоманду(ПараметрыКоманды);
	
КонецФункции // ВыполнитьКоманду()

///////////////////////////////////////////////////////////////////////////////

Процедура ПоказатьСправкуПоКомандам() Экспорт

	ВыполнитьКоманду("help", Новый Соответствие);

КонецПроцедуры // ПоказатьСправкуПоКомандам()

Функция РезультатыКоманд() Экспорт

	РезультатыКоманд = Новый Структура;
	РезультатыКоманд.Вставить("Успех", 0);
	РезультатыКоманд.Вставить("НеверныеПараметры", 5);
	РезультатыКоманд.Вставить("ОшибкаВремениВыполнения", 1);
	
	Возврат РезультатыКоманд;

КонецФункции // РезультатыКоманд

Функция КодВозвратаКоманды(Знач Команда) Экспорт

	Возврат Число(Команда);

КонецФункции // КодВозвратаКоманды

///////////////////////////////////////////////////////////////////////////////

Процедура ДобавитьКоманду(Знач ИмяКоманды, Знач КлассРеализации, Знач Парсер)
	
	РеализацияКоманды = Новый(КлассРеализации);
	РеализацияКоманды.ЗарегистрироватьКоманду(ИмяКоманды, Парсер);
	мИсполнителиКоманд.Вставить(ИмяКоманды, РеализацияКоманды);
	
КонецПроцедуры // ДобавитьКоманду()